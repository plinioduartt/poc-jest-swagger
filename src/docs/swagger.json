{
  "openapi": "3.0.0",
  "info": {
    "title": "Prova de conceito Jest.js e Swagger.io",
    "description":"Documentação de uma prova de conceito com o foco em Jest.js e Swagger.io",
    "version": "3.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:3000/",
      "description": "API de teste"
    }
  ],
  "paths": {
    "/users": {
      "post": {
        "summary": "Cadastro de usuário",
        "description": "Esta endpoint cadastra um usuário.",
        "tags": ["Users"],
        "security": [{"bearerAuth": []}],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUser"
              },
              "examples": {
                "User": {
                  "value": {
                    "name": "Plinio Duarte",
                    "email": "plinio.duartes@hotmail.com"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Email already exists."
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Listagem de usuários",
        "description": "Esta endpoint retorna a lista de usuários.",
        "tags": ["Users"],
        "security": [{"bearerAuth": []}],
        "responses": {
          "400": {
            "description": "Email already exists."
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/{id}": {
      "get": {
        "summary": "Busca de um usuário por id",
        "description": "Esta endpoint retorna um usuário a partir de um id.",
        "tags": ["Users"],
        "parameters": [{
          "id": "id",
          "in": "path",
          "description": "ID do usuário",
          "required": true
        }],
        "security": [{"bearerAuth": []}],
        "responses": {
          "404": {
            "description": "Not found."
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Atualização de usuário",
        "description": "Esta endpoint atualiza os dados de um usuário.",
        "tags": ["Users"],
        "parameters": [{
          "id": "id",
          "in": "path",
          "description": "ID do usuário",
          "required": true
        }],
        "security": [{"bearerAuth": []}],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUser"
              },
              "examples": {
                "User": {
                  "value": {
                    "name": "Plinio Duarte - Editado",
                    "email": "plinio.duartes.editado@hotmail.com"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Email already exists."
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delet de um usuário por id",
        "description": "Esta endpoint deleta um usuário a partir de um id.",
        "tags": ["Users"],
        "parameters": [{
          "id": "id",
          "in": "path",
          "description": "ID do usuário",
          "required": true
        }],
        "security": [{"bearerAuth": []}],
        "responses": {
          "404": {
            "description": "Not found."
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "uuid"
          },
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          }
        }
      },
      "CreateUser": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "required": true
          },
          "email": {
            "type": "string",
            "required": true
          }
        }
      },
      "UpdateUser": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "required": false
          },
          "email": {
            "type": "string",
            "required": false
          }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }  
  }  
}